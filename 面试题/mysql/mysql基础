### char和varchar的区别

定长和变长的区别，char未满时会使用空格填补，超过最大长度时，会截取字符串。char在储存时会自动剪裁右侧的空格串，而varchar不会

### drop和truncate和delete的区别

drop：删除表结构和数据，并将表所占用的空间全部释放掉，隐式提交，不能进行回滚，与其相关的约束、索引、触发器都会删除，但是储存过程和函数会保留，但是状态是invalid。

truncate：删除表数据，隐式提交，不会进行回滚，不会触发触发器，会重置高水线和索引，不会记录日志，所以执行速度很快

delete：可以删除表和视图，删除动作会记录，以便后面回滚等操作，不会重新设置高水线

### 什么是触发器，MySQL中都有哪些触发器？

触发器就是一段代码，当某个事件发生时，自动执行这一段代码，在MySQL数据库中有以下6个触发器，after/before(insert/update/delete)

### float和double的区别是什么

float保存单精度浮点数，最多可以保存8位十进制数，并在内存中占4个字节

double保存双精度浮点数，最多可以保存18位十进制数，内存中占8个字节

**如何在MySQL种获取当前日期？**

```sql
-- 当前日期
select current_date()
-- 当前时间
select current_time()
-- 当前时间戳
select current_timestamp()
```

### mysql储存引擎

innoDB：事务型引擎，数据储存在共享表空间，支持热备份，支持崩溃后的安全恢复，支持行级锁，支持外键。

MyISAM：拥有全文索引、压缩、空间函数，不支持事务、行级锁、崩溃后的安全恢复，表存储在两个文件

### MySQL事务相关问题

事务就是一系列逻辑操作单元，这一系列操作要么都执行，要么都不执行。

事务的四大特性：

- 原子性：事务内的操作要么都执行，要么都不执行
- 一致性：事务执行前后，会保障数据的完整性约束没有被破坏
- 隔离性：同一时间，只允许一个事务请求统一数据，多个事务之间相互隔离，不会互相影响
- 持久性：操作更新到数据库之后，这些操作的影响就不可逆

多个线程对同一数据进行操作，会出现并发问题。以下就是3中常见的并发问题。

- 脏读：一个事务读取了另一个事务未提交的数据

- 不可重复读：一个事务多次读取某条数据，另一个事务对该数据进行了更新操作，导致前后读取数据不一致

- 幻读：一个事务对数据表进行操作时，另一个事务在该表进行了增加或删除的操作后，导致操作未覆盖所有数据

  不可重复读和幻读容易混淆，不可重复读侧重的是更新操作，锁住满足条件的数据行就行了，幻读侧重的是新增删除操作，要锁住整张表。

为了解决上述问题，数据库事务设置了4中事务隔离级别，来解决并发和性能之间的取舍问题。

- 读未提交：不做任何隔离，会出现脏读、不可重复读、幻读情况
- 读提交：会限制脏读，但不会限制不可重复读、幻读情况
- 重复读：会限制脏读、不可重复读，但不会限制幻读情况，数据库默认就是这种级别
- 串行化：会限制脏读、不可重复读、幻读情况，但是读取性能会大大下降

### innodb引擎特性

- 插入缓冲

  将多个数据库改动操作放入到缓存中去，在满足一定条件时，将多个操作合并成一个操作，目的是为了减少随机IO带来的性能消耗，提升插入性能

- 二次写

  在从缓冲中flush之后到真正写入磁盘空间之前，会在系统表空间有一个doublewrite空间来缓存数据页，在写入磁盘过程中崩溃的话，可以利用这里的数据页进行恢复。

- 自适应哈希索引

  innoDB存储引擎会监控对表上二级索引的查找，当一个二级索引频繁被查询时，引擎会自动创建哈希索引，来提升查询性能

- 预读

  innoDB通过两个算法预先读取一部分数据，来提高I/O性能