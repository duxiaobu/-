冲突：当两个不同的值使用同一个hash算法生成的结果是一样时，就产生了hash冲突。

解决冲突的方法有两种，开放地址法和链表法

开放地址法又分为，线性探测法、二次探测法、双重散列法

- 线性探测法

  就是使用hash函数计算出位置后，如果该位置已经被占用了，就继续探测它下一个位置是否空闲，是的话就插入到该位置。该方法有一个弊端就是，当hash表中数据越来越多，产生冲突的机会就会越来越大，它往下寻址的时间就会越来多长，最差情况下可能是O(n)

- 二次探测法，就是二次方探测法，使用hash函数计算位置有值时，再加上二次方数字看该位置是否空闲，，，，

- 双重散列法不是使用一个hash函数，而是使用一组hash函数，当使用其中一个hash函数计算出该位置有值时，则使用下一个hash方法生成值，看该位置是否空闲

链表法

就是在该位置放置一个链表来存储冲突的数据